version: '3.5'
services:

    ### LOGIN PROVIDER SERVICE
    ### This is application that used for login provder. With this service we can show the login interface to the user, and provide authentication method.
    ### This application is supported by ORY Kratos as Cloud Native Identity Management or User Identity Provider. In other words, this service will hit
    ### ORY Kratos API for login, logout, and register user. It just show us the login interface and login workflow that provided by ORY Kratos
    login-provider:
        depends_on:
            - kratos
        container_name: app-login-provider
        build: .
        restart: on-failure
        ports:
            - '9000:9000'
        networks: 
            - go-network


    ### ORY KRATOS SERVICE
    ### This is Cloud Native Identity Management or User Identity Provider that used by LOGIN PROVIDER
    ### KRATOS-MIGRATE for migrating database
    kratos-migrate:
        depends_on: 
            - postgresql-db
        image: oryd/kratos:latest
        container_name: app-kratos-migrate
        environment: 
            - DSN=postgres://${DB_USER}:${DB_PASSWORD}@postgresql-db:${DB_PORT}/${DB_NAME}?sslmode=disable
        command: 
            -c /etc/config/kratos/config.yaml migrate sql -e --yes
        volumes: 
            - ./config:/etc/config/kratos
        restart: on-failure
        networks: 
            - go-network

    ### KRATOS for ORY Kratos service and API
    kratos:
        depends_on: 
            - kratos-migrate
        image: oryd/kratos:latest
        container_name: app-kratos
        environment: 
            - DSN=postgres://${DB_USER}:${DB_PASSWORD}@postgresql-db:${DB_PORT}/${DB_NAME}?sslmode=disable
        command: 
            serve -c /etc/config/kratos/config.yaml --dev
        volumes: 
            - ./config:/etc/config/kratos
        ports: 
            - '4433:4433'
            - '4434:4434'
        restart: unless-stopped
        networks: 
            - go-network
    
    mailslurper:
        depends_on: 
            - postgresql-db
        image: oryd/mailslurper:latest-smtps
        container_name: app-mailslurper
        ports:
            - "4436:4436"
            - "4437:4437"
        networks: 
            - go-network

    ### ORY HYDRA SERVICES
    ### This services are used for create and manage OAuth 2.0 client

    ### HYDRA MIGRATE for migrate database
    hydra-migrate:
        depends_on:
            - postgresql-db
        image: oryd/hydra
        container_name: app-hydra-migrate
        environment:
            - DSN=postgres://${DB_USER}:${DB_PASSWORD}@postgresql-db:${DB_PORT}/${DB_NAME}?sslmode=disable&max_conns=20&max_idle_conns=4
        command:
            migrate sql -e --yes
        restart: on-failure
        networks: 
            - go-network

    ### HYDRA SERVICE for serve OAuth 2.0 and OpenID Connect Provider
    hydra:
        depends_on:
            - hydra-migrate
        image: oryd/hydra
        container_name: app-hydra
        ports:
            - "4444:4444" # Public port
            - "4445:4445" # Admin port
            - "5555:5555" # Port for hydra token user
        command:
            serve all --dangerous-force-http
        environment:
            - URLS_SELF_ISSUER=http://127.0.0.1:4444
            - URLS_CONSENT=http://127.0.0.1:9000/oauth2/consent
            - URLS_LOGIN=http://127.0.0.1:9000/oauth2/login
            - URLS_LOGOUT=http://127.0.0.1:9000/oauth2/logout
            - SECRETS_SYSTEM=youReallyNeedToChangeThis
            - OIDC_SUBJECT_IDENTIFIERS_SUPPORTED_TYPES=public,pairwise
            - OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT=youReallyNeedToChangeThis
            - HYDRA_ADMIN_URL=http://127.0.0.1:4445
            - DSN=postgres://${DB_USER}:${DB_PASSWORD}@postgresql-db:${DB_PORT}/${DB_NAME}?sslmode=disable&max_conns=20&max_idle_conns=4
        restart: unless-stopped
        networks: 
            - go-network


    ### DATABASE SERVICE for database system that will used by ORY Hydra and ORY Kratos services
    postgresql-db:
        image: postgres:latest
        container_name: app-authentication-db
        environment: 
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_NAME}
            - DATABASE_HOST=${DB_HOST}
        networks: 
            - go-network
        ports: 
            - '${DB_EXTERNAL_PORT}:${DB_PORT}'

networks: 
    go-network:
        external: 
            name: sim-infinyscloud-network
    